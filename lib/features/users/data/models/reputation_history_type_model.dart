import 'package:freezed_annotation/freezed_annotation.dart';

@JsonEnum(alwaysCreate: true)
enum ReputationHistoryTypeModel {
  @JsonValue('asker_accepts_answer')
  askerAcceptsAnswer,
  @JsonValue('asker_unaccept_answer')
  askerUnacceptAnswer,
  @JsonValue('answer_accepted')
  answerAccepted,
  @JsonValue('answer_unaccepted')
  answerUnaccepted,
  @JsonValue('voter_downvotes')
  voterDownvotes,
  @JsonValue('voter_undownvotes')
  voterUndownvotes,
  @JsonValue('post_downvoted')
  postDownvoted,
  @JsonValue('post_undownvoted')
  postUndownvoted,
  @JsonValue('post_upvoted')
  postUpvoted,
  @JsonValue('post_unupvoted')
  postUnupvoted,
  @JsonValue('suggested_edit_approval_received')
  suggestedEditApprovalReceived,
  @JsonValue('post_flagged_as_spam')
  postFlaggedAsSpam,
  @JsonValue('post_flagged_as_offensive')
  postFlaggedAsOffensive,
  @JsonValue('bounty_given')
  bountyGiven,
  @JsonValue('bounty_earned')
  bountyEarned,
  @JsonValue('bounty_cancelled')
  bountyCancelled,
  @JsonValue('post_deleted')
  postDeleted,
  @JsonValue('post_undeleted')
  postUndeleted,
  @JsonValue('association_bonus')
  associationBonus,
  @JsonValue('arbitrary_reputation_change')
  arbitraryReputationChange,
  @JsonValue('vote_fraud_reversal')
  voteFraudReversal,
  @JsonValue('post_migrated')
  postMigrated,
  @JsonValue('user_deleted')
  userDeleted,
  @JsonValue('example_upvoted')
  exampleUpvoted,
  @JsonValue('example_unupvoted')
  exampleUnupvoted,
  @JsonValue('proposed_change_approved')
  proposedChangeApproved,
  @JsonValue('doc_link_upvoted')
  docLinkUpvoted,
  @JsonValue('doc_link_unupvoted')
  docLinkUnupvoted,
  @JsonValue('doc_source_removed')
  docSourceRemoved,
  @JsonValue('suggested_edit_approval_overridden')
  suggestedEditApprovalOverridden,

  // unexpected value
  @JsonValue('unknown')
  unknown,
}
